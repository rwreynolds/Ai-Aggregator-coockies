version: '3.8'

services:
  # Flask backend API
  api:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: ai_aggregator_api
    restart: always
    ports:
      - "5000:5000"
    volumes:
      - ./backend:/app
    environment:
      - FLASK_APP=app/wsgi.py
      - FLASK_ENV=development
      - PYTHONUNBUFFERED=1
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/ai_aggregator
      - MONGODB_URI=mongodb://mongodb:27017/ai_aggregator
      - SECRET_KEY=${SECRET_KEY}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
      - MISTRAL_API_KEY=${MISTRAL_API_KEY}
    depends_on:
      - postgres
      - mongodb
    networks:
      - ai_aggregator_network

  # PostgreSQL database (for user accounts and settings)
  postgres:
    image: postgres:15-alpine
    container_name: ai_aggregator_postgres
    restart: always
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=ai_aggregator
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - ai_aggregator_network

  # MongoDB database (for chat history and sessions)
  mongodb:
    image: mongo:6.0-focal
    container_name: ai_aggregator_mongodb
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - ai_aggregator_network

  # NGINX for serving the frontend and routing to the backend API
  nginx:
    image: nginx:1.25-alpine
    container_name: ai_aggregator_nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/sites-enabled:/etc/nginx/sites-enabled:ro
      - ./frontend/.next:/var/www/frontend:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - api
    networks:
      - ai_aggregator_network

volumes:
  postgres_data:
  mongodb_data:

networks:
  ai_aggregator_network:
    driver: bridge